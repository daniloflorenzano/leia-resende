@using Core.News

<div class="card mb-3">
    <div class="row g-0">
        <div class="col-md-4">
            @if(@news.ImageUrl != null)
            {
                <img src="@news.ImageUrl?.AbsoluteUri" alt="@news.Title" class="img-fluid rounded-start">
            }
            else
            {
                <img src="https://via.placeholder.com/300" alt="Imagem não disponível" class="img-fluid rounded-start">
            }
        </div>
        <div class="col-md-8 position-relative">
            <div class="card-body d-flex flex-column" style="height: 100%;">

                <h5 class="card-title">
                    <a href="@news.OriginalUrl.AbsoluteUri" target="_blank" class="custom-link">@news.Title</a>
                </h5>
                <p class="card-text">@news.GetFormatedContent()</p>

                <!-- Alinhamento dos botões com a data no rodapé -->
                <div class="mt-auto d-flex justify-content-between align-items-center">
                    <small class="text-muted">@news.PublishedAt.ToString("dd/MM/yyyy")</small>
                    <div>
                        <button class="btn btn-sm btn-light me-2" style="margin-left: 20px" onclick="copyLink('@news.OriginalUrl.AbsoluteUri')">
                            <i class="bi bi-clipboard"></i> Copiar link
                        </button>

                        <button class="btn btn-sm btn-light" style="margin-left: 20px; margin-top: 10px" onclick="openInNewTab('@news.OriginalUrl.AbsoluteUri')">
                            <i class="bi bi-box-arrow-up-right"></i> Ir para a notícia
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .card {
        max-width: 100%;
    }

    .img-fluid {
        object-fit: cover;
        height: 100%;
    }

    /* Estilos para garantir que os botões fiquem alinhados ao final do card */
    .card-body {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .custom-link {
        color: inherit;
        text-decoration: none;
    }
</style>

<script>
    function copyLink(link) {
        navigator.clipboard.writeText(link).then(function() {
            Toastify({
                text: "Link copiado com sucesso!",
                duration: 3000,
                close: true,
                gravity: "top",
                position: "right",
                backgroundColor: "#4CAF50",
                stopOnFocus: true,
            }).showToast();
        }, function(err) {
            Toastify({
                text: "Erro ao copiar o link!",
                duration: 3000,
                close: true,
                gravity: "top",
                position: "right",
                backgroundColor: "#f44336",
                stopOnFocus: true,
            }).showToast();
        });
    }

    function openInNewTab(link) {
        window.open(link, '_blank').focus();
    }
</script>

@code {
    [Parameter]
    public News news { get; set; }
}
