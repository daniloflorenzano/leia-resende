@using Core.News

<div class="card">
    <div class="card-body">
        <p><img class="source-icon" src="@news.AuthorIconUrl" alt="icone da fonte da noticia"/> @news.Author</p>
        <p class="card-text mb-2" style="font-weight: bolder; font-size: 1.2rem">@news.GetFormatedTitle()</p>
        <div class="d-flex justify-content-between align-items-center" style="margin-top: auto">
            <small class="text-muted">@news.PublishedAt.ToString("dd/MM/yyyy")</small>
        </div>
    </div>

    @if (news.ImageUrl != null)
    {
        <img src="@news.ImageUrl?.AbsoluteUri" alt="@news.Title" class="img-fluid rounded-start card-img-top">
    }
    else
    {
        <img src="https://via.placeholder.com/300" alt="Imagem não disponível" class="img-fluid rounded-start card-img-top">
    }
</div>

<style>
    .card {
        max-width: 100%;
        padding: 0 10px 10px 10px;
        height: 100%;
    }

    .source-icon{
        width: 20px;
        height: 20px;
        border-radius: 50%;
        margin-right: 5px;
    }
    
    .img-fluid {
        height: 200px;
        border-radius: 20px !important;
    }
    
    .card-body {
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
    }

    .custom-link {
        color: inherit;
        text-decoration: none;
    }
</style>

<script>
    function copyLink(link) {
        navigator.clipboard.writeText(link).then(function() {
            Toastify({
                text: "Link copiado com sucesso!",
                duration: 3000,
                close: true,
                gravity: "top",
                position: "right",
                backgroundColor: "#4CAF50",
                stopOnFocus: true,
            }).showToast();
        }, function(err) {
            Toastify({
                text: "Erro ao copiar o link!",
                duration: 3000,
                close: true,
                gravity: "top",
                position: "right",
                backgroundColor: "#f44336",
                stopOnFocus: true,
            }).showToast();
        });
    }

    function openInNewTab(link) {
        window.open(link, '_blank').focus();
    }
</script>

@code {
    [Parameter] public News news { get; set; }
}