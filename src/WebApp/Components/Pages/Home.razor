@page "/"
@using Core.News
@inject GetNews getNews;

<PageTitle>Página Inicial</PageTitle>

<div class="container">
    <h1 class="text-center mt-4">
        Leia Resende
        <i class="bi bi-brightness-high-fill" id="themeIcon" onclick="toggleTheme()" style="cursor: pointer;"></i>
    </h1>
    <p class="text-center">Agregador de notícias</p>

    @if (news != null)
    {
        <div class="d-flex flex-column align-items-center">
            @foreach (var item in news)
            {
                <div class="col-md-4 mb-3 w-75">
                    <NewsCard news="@item" />
                </div>
            }
        </div>
    }
    else
    {
        <p class="text-center">Carregando...</p>
    }
</div>

<script>
    function applySavedTheme() {
        const savedTheme = localStorage.getItem("theme");
        if (savedTheme === "dark") {
            document.body.classList.add("dark-theme");
            document.getElementById("themeIcon").classList.remove("bi-brightness-high-fill");
            document.getElementById("themeIcon").classList.add("bi-moon");
        }
    }

    function toggleTheme() {
        const body = document.body;
        body.classList.toggle("dark-theme");

        const icon = document.getElementById("themeIcon");
        if (body.classList.contains("dark-theme")) {
            icon.classList.remove("bi-brightness-high-fill");
            icon.classList.add("bi-moon");
            localStorage.setItem("theme", "dark"); // Salva a preferência como "dark"
        } else {
            icon.classList.remove("bi-moon");
            icon.classList.add("bi-brightness-high-fill");
            localStorage.setItem("theme", "light"); // Salva a preferência como "light"
        }
    }

    // Aplica o tema salvo quando a página é carregada
    document.addEventListener("DOMContentLoaded", applySavedTheme);
</script>


<style>
    body {
        background-color: white;
        color: black;
        transition: background-color 0.3s, color 0.3s;
    }

    .dark-theme {
        background-color: black;
        color: white;
    }

    .card {
        background-color: white;
        /* Cor padrão do card */
        color: black;
        /* Cor padrão do texto */
        transition: background-color 0.3s, color 0.3s;
        /* Transição suave */
    }

    .dark-theme .card {
        background-color: #333;
        /* Cor do card no modo escuro */
        color: white;
        /* Cor do texto no modo escuro */
    }
</style>


@code {
    private IEnumerable<News>? news;

    protected override async Task OnInitializedAsync(){
        //news ??= await getNews.Handle();

        if (news is null) {
            var result = await getNews.Handle();
            if (result is not null) {
                news = result;
            }
        }
    } 
}
